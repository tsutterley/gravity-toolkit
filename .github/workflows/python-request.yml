# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python on pull request

on:
  pull_request:

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies for Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install libproj-dev proj-data proj-bin libgeos-dev
        sudo apt-get install libhdf5-dev libnetcdf-dev
        sudo apt-get install libxml2-dev libxslt1-dev
        pip install --upgrade pip
        pip install flake8 pytest pytest-cov numpy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install dependencies for MacOS
      if: matrix.os == 'macos-latest'
      run: |
        brew install proj
        brew install geos
        brew install hdf5
        brew install netcdf
        brew install libxml2
        brew install libxslt
        pip install --upgrade pip
        pip install flake8 pytest pytest-cov numpy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install --no-deps .
        pytest --cov=./ --cov-report=xml \
            --username=${{ secrets.EARTHDATA_USERNAME }} \
            --password=${{ secrets.EARTHDATA_PASSWORD }} \
            --webdav=${{ secrets.PODAAC_PASSWORD }}
    - name: Archive code coverage results
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: ./coverage.xml
